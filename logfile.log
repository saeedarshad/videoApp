{"level":"info","message":"Connected to Database...","timestamp":"2018-08-09T21:58:34.073Z"}
{"level":"info","message":"Connected to Database...","timestamp":"2018-08-09T22:01:07.868Z"}
{"message":"failed to reconnect after 30 attempts with interval 1000 ms","name":"MongoNetworkError","stack":"MongoNetworkError: failed to reconnect after 30 attempts with interval 1000 ms\n    at Connection.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\pool.js:363:13)\n    at emitTwo (events.js:126:13)\n    at Connection.emit (events.js:214:7)\n    at Socket.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\connection.js:245:50)\n    at Object.onceWrapper (events.js:315:30)\n    at emitOne (events.js:116:13)\n    at Socket.emit (events.js:211:7)\n    at emitErrorNT (internal/streams/destroy.js:64:8)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","errorLabels":["TransientTransactionError"],"level":"error","timestamp":"2018-08-09T22:03:09.992Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:15.146Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:17.077Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:17.947Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:22.629Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:23.899Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:33.077Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:33.500Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:33.577Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:33.744Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:33.843Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:34.041Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:34.136Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:04:34.372Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-09T22:05:57.236Z"}
{"level":"info","message":"Connected to Database...","timestamp":"2018-08-09T22:05:58.305Z"}
{"message":"failed to reconnect after 30 attempts with interval 1000 ms","name":"MongoNetworkError","stack":"MongoNetworkError: failed to reconnect after 30 attempts with interval 1000 ms\n    at Connection.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\pool.js:363:13)\n    at emitTwo (events.js:126:13)\n    at Connection.emit (events.js:214:7)\n    at Socket.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\connection.js:245:50)\n    at Object.onceWrapper (events.js:315:30)\n    at emitOne (events.js:116:13)\n    at Socket.emit (events.js:211:7)\n    at emitErrorNT (internal/streams/destroy.js:64:8)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","errorLabels":["TransientTransactionError"],"level":"error","timestamp":"2018-08-09T22:07:35.202Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:09:36.406Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:09:37.611Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:09:37.720Z"}
{"message":"Topology was destroyed","name":"MongoError","stack":"MongoError: Topology was destroyed\n    at nextFunction (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:603:27)\n    at Cursor.next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\cursor.js:824:3)\n    at Cursor._next (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:211:36)\n    at fetchDocs (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:211:12)\n    at toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\operations\\cursor_ops.js:241:3)\n    at executeOperation (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:420:24)\n    at Cursor.toArray (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\cursor.js:818:10)\n    at F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:30:14\n    at handleCallback (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\utils.js:128:55)\n    at Collection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb\\lib\\collection.js:431:43)\n    at NativeCollection.(anonymous function) [as find] (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:142:28)\n    at NodeCollection.find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mquery\\lib\\collection\\node.js:26:19)\n    at model.Query.Query._find (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1670:20)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"error","timestamp":"2018-08-09T22:09:37.966Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-09T22:09:44.429Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-09T22:12:49.352Z"}
{"message":"failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]","name":"MongoNetworkError","stack":"MongoNetworkError: failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]\n    at Pool.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\topologies\\server.js:562:11)\n    at emitOne (events.js:116:13)\n    at Pool.emit (events.js:211:7)\n    at Connection.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\pool.js:316:12)\n    at Object.onceWrapper (events.js:317:30)\n    at emitTwo (events.js:126:13)\n    at Connection.emit (events.js:214:7)\n    at Socket.<anonymous> (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongodb-core\\lib\\connection\\connection.js:245:50)\n    at Object.onceWrapper (events.js:315:30)\n    at emitOne (events.js:116:13)\n    at Socket.emit (events.js:211:7)\n    at emitErrorNT (internal/streams/destroy.js:64:8)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","errorLabels":["TransientTransactionError"],"level":"error","timestamp":"2018-08-09T22:12:51.420Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-09T22:13:37.052Z"}
{"level":"error","message":"failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]","timestamp":"2018-08-09T22:13:39.123Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T11:39:52.635Z"}
{"level":"error","message":"failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]","timestamp":"2018-08-11T11:39:54.696Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T11:40:22.495Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T11:40:23.619Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T11:41:54.917Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T11:41:56.083Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T11:56:16.073Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T11:56:17.196Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:01:27.258Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:02:54.437Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:02:55.613Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:03:43.568Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:03:44.668Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:04:34.543Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:04:35.589Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:10:19.591Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:10:20.660Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:11:05.450Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:11:06.526Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:13:25.665Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:13:26.705Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:15:50.523Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:15:51.551Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:16:11.751Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:16:12.794Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:16:23.348Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:16:24.376Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:20:39.274Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:20:40.317Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:21:27.798Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:21:28.848Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:22:09.763Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:22:10.798Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:24:11.802Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:24:12.863Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:24:22.636Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:24:23.694Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:24:43.680Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:24:44.721Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:25:03.510Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:25:04.559Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:25:21.730Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:25:22.759Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:25:37.984Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:25:39.010Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:25:48.921Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:25:49.944Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:26:23.503Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:26:24.546Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:26:51.566Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:26:52.618Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:31:44.055Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:31:45.092Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:31:45.147Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:34:10.305Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:34:11.363Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:34:11.444Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:34:41.704Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:34:42.750Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:34:42.840Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:35:59.454Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:36:00.489Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:36:00.595Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:36:16.946Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:36:18.003Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:36:18.087Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:36:58.965Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:37:00.014Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:37:00.115Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:37:14.925Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:37:15.969Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:37:16.052Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:38:50.054Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:38:51.082Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:38:51.165Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:39:50.989Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:39:52.165Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:41:31.440Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:41:32.495Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:42:10.281Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:42:11.337Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:44:04.949Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:44:06.005Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:45:11.637Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:45:12.678Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:45:12.855Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:46:27.288Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:46:28.314Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:46:28.408Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:47:10.161Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:47:11.222Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\error\\cast.js:29:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schema\\objectid.js:155:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:740:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1129:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1119:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1098:15)\n    at cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\cast.js:303:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:3810:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1603:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\MeanStack\\Node\\express-demo\\node_modules\\mongoose\\lib\\query.js:1834:8)\n    at process.nextTick (F:\\MeanStack\\Node\\express-demo\\node_modules\\kareem\\index.js:333:33)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-08-11T12:47:11.392Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:47:40.754Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:47:41.794Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:48:52.317Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:48:53.341Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:50:25.550Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:50:26.611Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:50:51.238Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:50:52.296Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:51:11.108Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:51:12.161Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:51:23.442Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:51:24.468Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:53:03.202Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:53:04.245Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:53:15.622Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:53:16.649Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:53:26.592Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:53:27.632Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:53:53.104Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:53:54.149Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:54:44.477Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:54:45.519Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:55:04.307Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:55:05.338Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:56:55.469Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:56:56.497Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:57:56.777Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:57:57.802Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T12:59:47.895Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T12:59:48.936Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:00:10.018Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:00:11.070Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:00:43.683Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:00:44.735Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:01:45.723Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:01:46.773Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:02:05.616Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:02:06.656Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:02:41.949Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:02:42.986Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:03:00.630Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:03:01.666Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:03:36.071Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:03:37.095Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:04:28.711Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:04:29.740Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:08:33.502Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:08:34.552Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:08:49.854Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:08:50.905Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:09:19.129Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:09:20.188Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:11:27.979Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:11:29.033Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:11:51.254Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:11:52.279Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:12:47.652Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:12:48.699Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:12:58.887Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:12:59.911Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:13:19.415Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:13:20.459Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:14:00.313Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:14:01.338Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:24:10.494Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:24:11.534Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:24:44.851Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:24:45.901Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:24:59.324Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:25:00.371Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:25:24.905Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:25:25.929Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:25:35.796Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:25:36.854Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:25:49.318Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:25:50.357Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:26:23.207Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:26:24.252Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:26:35.752Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:26:36.800Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:27:07.385Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:27:08.438Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:27:53.905Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:27:54.944Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:43:16.645Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:43:17.696Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:43:29.449Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:43:30.483Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:44:27.955Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:44:28.981Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:44:52.004Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:44:53.043Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:51:12.009Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:51:12.386Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T13:51:13.080Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T13:51:13.442Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T14:01:42.986Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T14:01:44.055Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T14:01:44.089Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T14:02:08.143Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T14:02:09.169Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T14:02:09.199Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T14:02:10.198Z"}
{"level":"error","timestamp":"2018-08-11T14:02:10.280Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:07:56.033Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:07:57.093Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:07:57.083Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:07:58.133Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:08:17.372Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:08:18.373Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:08:18.412Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:08:19.430Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:08:47.219Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:08:48.263Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:08:48.364Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:08:50.421Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:09:04.553Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:09:05.570Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:09:05.618Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:09:06.615Z"}
{"level":"error","timestamp":"2018-08-11T20:09:06.723Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:09:33.759Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:09:34.813Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:09:34.852Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:09:36.913Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:10:22.515Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:10:23.526Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:10:23.567Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:10:24.551Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:10:46.473Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:10:47.542Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:10:47.611Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:10:49.667Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:11:13.924Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:11:14.995Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:11:15.056Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:11:17.093Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:11:36.510Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:11:37.550Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:11:37.649Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:11:39.691Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:12:37.860Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:12:38.932Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:12:38.957Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:12:40.999Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:13:05.060Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:13:06.109Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:13:06.131Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:13:08.187Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:13:47.448Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:13:48.470Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:13:48.491Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:13:49.529Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:14:07.177Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:14:08.187Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:14:08.228Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:14:09.230Z"}
{"level":"error","timestamp":"2018-08-11T20:14:09.315Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:16:51.405Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:16:52.479Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:16:52.521Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:16:54.582Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:30:08.014Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:30:09.081Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:30:09.097Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:30:11.140Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:32:21.048Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:32:22.091Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:32:22.143Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:32:24.194Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:34:31.664Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T20:34:32.758Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:35:07.442Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:35:08.501Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:35:08.670Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:35:10.733Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:41:07.390Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:41:08.412Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:41:08.430Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:41:09.475Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:43:01.507Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:43:02.575Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:43:02.693Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:43:04.739Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:43:31.850Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T20:43:32.921Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:44:01.997Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:44:03.053Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:44:03.067Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:44:05.157Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:44:39.673Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T20:44:40.786Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:45:04.306Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:45:05.382Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:45:05.433Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:45:07.486Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:46:01.779Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:46:02.513Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:46:02.854Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:46:03.585Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:46:40.754Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:46:41.495Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:46:41.848Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:46:42.556Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:51:03.735Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:51:04.705Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:51:04.773Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:51:05.885Z"}
{"level":"error","timestamp":"2018-08-11T20:51:07.991Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:52:58.946Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:52:59.055Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:53:00.023Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:53:00.167Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:53:49.307Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T20:53:50.394Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:58:26.937Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T20:58:26.938Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:58:28.003Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T20:58:28.020Z"}
{"level":"error","timestamp":"2018-08-11T20:58:30.058Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:01:43.022Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:01:43.077Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:01:44.099Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:01:44.147Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:02:08.921Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:02:09.083Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:02:09.992Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:02:10.175Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:07:26.345Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:07:26.298Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:07:27.421Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:07:27.530Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:07:27.584Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:07:29.641Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:16:55.977Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:16:56.010Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:16:56.019Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:16:57.122Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:16:57.184Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:16:57.349Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:03.838Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:03.889Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:05.020Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:05.029Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:05.302Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:08.349Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:21.734Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:21.881Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:22.798Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:22.928Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:37:23.009Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:37:25.976Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:39:25.816Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:39:25.961Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:39:26.979Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:39:27.042Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:39:27.057Z"}
{"level":"error","timestamp":"2018-08-11T21:39:29.104Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:39:30.025Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:45:54.300Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:45:54.409Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:45:55.364Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:45:55.467Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:45:56.527Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:45:58.563Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:49:47.929Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:49:48.011Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:49:49.005Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:49:49.084Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:49:49.096Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:49:52.159Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:50:50.748Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:50:50.909Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:50:51.820Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:50:51.859Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T21:50:51.978Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:50:53.913Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T21:59:20.319Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T21:59:21.414Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T22:02:48.806Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-11T22:02:49.912Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T22:06:33.412Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T22:06:33.488Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T22:06:34.703Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T22:06:34.752Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly_test...","timestamp":"2018-08-11T22:06:34.979Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-11T22:06:37.297Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-12T13:21:19.271Z"}
{"level":"error","message":"failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]","timestamp":"2018-08-12T13:21:21.429Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-12T13:21:55.169Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-12T13:21:56.287Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-12T13:37:29.911Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-12T13:37:31.014Z"}
{"level":"info","message":"listening on port 3000","timestamp":"2018-08-12T13:38:04.003Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/vidly...","timestamp":"2018-08-12T13:38:05.116Z"}
